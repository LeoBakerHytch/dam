name: Build / Test / Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "tag=ghcr.io/${OWNER}/backend:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build image
        run: docker build -t ${{ steps.meta.outputs.tag }} backend/

      - name: Save image for tests
        if: ${{ !env.ACT }}
        run: docker save ${{ steps.meta.outputs.tag }} -o backend.tar

      - name: Upload backend image artifact
        uses: actions/upload-artifact@v4
        if: ${{ !env.ACT }}
        with:
          name: backend-image
          path: backend.tar

  backend-tests:
    name: Run backend tests
    runs-on: ubuntu-latest
    needs: build-backend
    env:
      COMPOSE_CMD: docker compose -p ${{ github.job }} -f docker-compose.ci.yml
      BACKEND_IMAGE: ${{ needs.build-backend.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download backend image artifact
        uses: actions/download-artifact@v4
        if: ${{ !env.ACT }}
        with:
          name: backend-image

      - name: Load Docker image
        if: ${{ !env.ACT }}
        run: docker load -i backend.tar

      - name: Start services
        run: $COMPOSE_CMD up -d

      - name: Wait for backend to be ready
        run: bash .github/scripts/wait-for-backend.sh

      - name: Wait for database to be ready
        run: bash .github/scripts/wait-for-db.sh

      - name: Install test dependencies
        run: $COMPOSE_CMD exec -T backend composer install

      - name: Run migrations
        run: $COMPOSE_CMD exec -T backend php artisan migrate --force

      - name: Run tests
        run: $COMPOSE_CMD exec -T backend ./vendor/bin/phpunit

      - name: Stop services
        if: always()
        run: $COMPOSE_CMD down -v
