"Account of a person who uses this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "Userâ€™s avatar URL."
    avatarUrl: String @rename(attribute: "avatar_url")

    "When the email was verified."
    emailVerifiedAt: DateTime @rename(attribute: "email_verified_at")

    "When the account was created."
    createdAt: DateTime! @rename(attribute: "created_at")

    "When the account was last updated."
    updatedAt: DateTime! @rename(attribute: "updated_at")
}


extend type Query {
    "The currently logged-in user."
    currentUser: User @auth
}


extend type Mutation {
    User_UpdateProfile(input: User_UpdateProfile_Input!): User_UpdateProfile_Response!
    @field(resolver: "App\\GraphQL\\Resolvers\\User_UpdateProfile")
    @guard
}

input User_UpdateProfile_Input {
    name: String @rules(apply: ["max:255"])
}

type User_UpdateProfile_Response {
    user: User!
}


extend type Mutation {
    User_SetAvatar(input: User_SetAvatar_Input!): User_SetAvatar_Response!
    @field(resolver: "App\\GraphQL\\Resolvers\\User_SetAvatar")
    @guard
}

input User_SetAvatar_Input {
    avatar: Upload!
}

type User_SetAvatar_Response {
    user: User!
}
