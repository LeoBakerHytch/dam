type ImageAsset {
    id: ID!
    name: String!
    url: String!
    thumbnailUrl: String! @rename(attribute: "thumbnail_url")

    fileName: String! @rename(attribute: "file_name")
    fileSize: Int! @rename(attribute: "file_size")
    fileSizeHuman: String! @rename(attribute: "file_size_human")

    mimeType: String! @rename(attribute: "mime_type")
    width: Int!
    height: Int!

    description: String
    altText: String @rename(attribute: "alt_text")
    tags: [String!]!

    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")

    userId: ID! @rename(attribute: "user_id")
    user: User! @belongsTo
}


extend type Query {
    imageAssets: [ImageAsset!]!
    @paginate(defaultCount: 27, scopes: ["forUser"])
    @guard
}


extend type Mutation {
    ImageAsset_Upload(input: ImageAsset_Upload_Input!): ImageAsset_Upload_Response!
    @field(resolver: "App\\GraphQL\\Resolvers\\ImageAsset_Upload")
    @guard
}

input ImageAsset_Upload_Input {
    image: Upload!
}

type ImageAsset_Upload_Response {
    imageAsset: ImageAsset!
}


extend type Mutation {
    ImageAsset_SetDetails(input: ImageAsset_SetDetails_Input!): ImageAsset_SetDetails_Response!
    @field(resolver: "App\\GraphQL\\Resolvers\\ImageAsset_SetDetails")
    @guard
    @can(ability: "update", find: "input.id", model: "App\\Models\\ImageAsset")
}

input ImageAsset_SetDetails_Input {
    id: ID!

    description: String
    @rules(
        apply: ["max:1000"],
        messages: [ { rule: "max" message: "Descriptions may be 1000 characters at most." } ]
    )

    altText: String
    @rules(
        apply: ["max:300"],
        messages: [ { rule: "max" message: "Alt text may be 300 characters at most." } ]
    )

    tags: [String!]
    @rules(
        apply: ["max:40"],
        messages: [ { rule: "max", message: "Tags may each be 40 characters at most." } ]
    )
}

type ImageAsset_SetDetails_Response {
    imageAsset: ImageAsset!
}
