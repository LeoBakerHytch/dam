{
    "compilerOptions": {
        "target": "ES2020",
        "useDefineForClassFields": true,
        "lib": ["ES2020", "DOM", "DOM.Iterable"],
        "module": "ESNext",
        "skipLibCheck": true,
        "baseUrl": ".",
        "paths": {
            "@/*": ["./src/*"]
        },

        /* Bundler mode */
        "moduleResolution": "bundler",
        "resolveJsonModule": true,
        "isolatedModules": true,
        "noEmit": true,
        "jsx": "react-jsx",
        "forceConsistentCasingInFileNames": true,
        "allowImportingTsExtensions": false,

        /* Linting */
        "strict": true,
        "noImplicitAny": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "noFallthroughCasesInSwitch": true,

        /* gql.tada */
        "plugins": [
            {
                "name": "gql.tada/ts-plugin",
                "schema": "http://localhost:8000/graphql",
                "tadaOutputLocation": "./src/graphql-env.d.ts",
                /* So long as we use a single, canonical fragment for each type, this inspection produces spurious errors */
                "shouldCheckForColocatedFragments": false
            }
        ]
    },
    "include": ["src/**/*.tsx", "src/**/*.ts", "src/**/*.d.ts"],
}
